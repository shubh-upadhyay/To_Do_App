{"ast":null,"code":"var _jsxFileName = \"/Users/musubimanagement/Desktop/react1/src/App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { Task } from \"./Task\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [newTask, setNewTask] = useState();\n  // const [todoList, setTodoList] = useState();\n\n  const [todoList, setTodoList] = useState(() => {\n    const saved = localStorage.getItem('key2');\n    const savedvalues = JSON.parse(saved);\n    return savedvalues;\n  });\n  seEffect(() => {\n    window.localStorage.setItem(\"key2\", JSON.stringify(todoList));\n  }, [todoList]);\n  useEffect(() => {\n    const mydata = window.localStorage.getItem('key2');\n    if (mydata) setTodoList(JSON.parse(mydata));\n  }, []);\n  const handleChange = event => {\n    setNewTask(event.target.value);\n  };\n  u;\n\n  // since we can't add the data in array or list in react using normal list or array methods\n  // we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\n  const addTask = () => {\n    const newTodoList = [...todoList, newTask];\n    setTodoList(newTodoList);\n    const task = {\n      id: todoList.length == 0 ? 1 : todoList[todoList.length - 1].id + 1,\n      taskName: newTask,\n      completed: false\n    };\n    setTodoList([...todoList, task]);\n    // we can use the above code block as well this is simpler and shorter way to achive the task that is\n    // to add exiting list task with a newt task\n  };\n\n  // const completeTask = (id) => {\n  //   setTodoList(\n  //     todoList.map((task)=>{\n  //       if(task.id === id){\n  //         return{...task,completed:true};\n  //       } \n  //       else{\n  //         return task;\n  //       }\n  //     })\n  //   )\n  //   }\n  const completeTask = id => {\n    setTodoList(todoList.map(task => {\n      if (task.id === id) {\n        return {\n          ...task,\n          completed: true\n        };\n      } else {\n        return task;\n      }\n    }));\n  };\n  const deleteTask = id => {\n    // const newTodoList = todoList.filter((task)=> task!== taskName); \n\n    // const newTodoList = todoList.filter((task) =>{\n    //   if (task === taskName){\n    //     return false;}\n    //   else{\n    //     return true;}\n    // })\n\n    // setTodoList(newTodoList);\n    setTodoList(todoList.filter(task => task.id !== id));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"addTask\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 43\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"list\",\n      children: todoList && todoList.map(task => {\n        return /*#__PURE__*/_jsxDEV(Task, {\n          taskName: task.taskName,\n          id: task.id,\n          completed: task.completed,\n          deleteTask: deleteTask,\n          completeTask: completeTask\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 56\n        }, this);\n        // return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"FMdLGGEpvtfOe9l0zVej7fMO5AI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Task","App","newTask","setNewTask","todoList","setTodoList","saved","localStorage","getItem","savedvalues","JSON","parse","seEffect","window","setItem","stringify","mydata","handleChange","event","target","value","u","addTask","newTodoList","task","id","length","taskName","completed","completeTask","map","deleteTask","filter"],"sources":["/Users/musubimanagement/Desktop/react1/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { useState, useEffect} from \"react\";\nimport {Task} from \"./Task\"\n\nfunction App() {\n\n  const [newTask, setNewTask] = useState();\n  // const [todoList, setTodoList] = useState();\n\n  const [todoList, setTodoList] = useState(()=>{\n    const saved=localStorage.getItem('key2')\n    const savedvalues=JSON.parse(saved)\n    return savedvalues\n  });\n\n\n  seEffect(()=>{\n     \n    window.localStorage.setItem(\"key2\",JSON.stringify(todoList))},\n    [todoList]);\n\n  useEffect(()=>{\n      const mydata = window.localStorage.getItem('key2');\n      if (mydata)\n      setTodoList(JSON.parse(mydata))}\n    ,[]);\n\n\n  const handleChange = (event) => {\n    setNewTask(event.target.value);\n  };\n\n\n  u\n\n  // since we can't add the data in array or list in react using normal list or array methods\n  // we have to modify the state of the list here, so we have to use a set method to modify the state of the already existing array.\n  const addTask = () => {\n     \n    const newTodoList = [...todoList, newTask];\n    setTodoList(newTodoList);\n\n    const task={\n      id: todoList.length == 0 ? 1 :   todoList[todoList.length-1].id+1,\n      taskName: newTask,\n      completed: false,\n    };\n\n\n    setTodoList([...todoList,task]);\n    // we can use the above code block as well this is simpler and shorter way to achive the task that is\n    // to add exiting list task with a newt task\n  };\n\n  // const completeTask = (id) => {\n  //   setTodoList(\n  //     todoList.map((task)=>{\n  //       if(task.id === id){\n  //         return{...task,completed:true};\n  //       } \n  //       else{\n  //         return task;\n  //       }\n  //     })\n  //   )\n  //   }\n  const completeTask = (id) => {\n    setTodoList(\n      todoList.map((task) => {\n        if (task.id === id) {\n          return { ...task, completed: true };\n        } else {\n          return task;\n        }\n      })\n    );\n  };\n\n\n\n  const deleteTask=(id)=>{\n    // const newTodoList = todoList.filter((task)=> task!== taskName); \n\n    // const newTodoList = todoList.filter((task) =>{\n    //   if (task === taskName){\n    //     return false;}\n    //   else{\n    //     return true;}\n      // })\n\n      // setTodoList(newTodoList);\n      setTodoList(todoList.filter((task)=> task.id !== id));\n    \n\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"addTask\">\n        <input onChange={handleChange} /> <button onClick={(addTask)}>Add Task </button>\n         \n      </div>\n      <div className=\"list\">\n        {todoList && todoList.map((task) => { return ( <Task \n          taskName={task.taskName} \n          id={task.id} \n          completed={task.completed}\n          deleteTask={deleteTask} \n          completeTask={completeTask} />)\n          // return (<div><h1> {task.taskName} </h1><button onClick={()=> deleteTask(task.id)}>X</button></div>);\n          \n         \n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}